name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: roadmap_db_test
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Create .env file
              run: |
                  echo "DATABASE_URL=mysql://root:root@localhost:3306/roadmap_db_test" > .env
                  echo "JWT_SECRET=test-secret-key" >> .env
                  echo "JWT_EXPIRES_IN=7d" >> .env

            - name: Generate Prisma client
              run: npx prisma generate

            - name: Run database migrations
              run: npx prisma migrate deploy

            - name: Run linting
              run: npm run lint

            - name: Run unit tests
              run: npm test

            - name: Run e2e tests
              run: npm run test:e2e
              env:
                  DATABASE_URL: mysql://root:root@localhost:3306/roadmap_db_test

            - name: Build application
              run: npm run build

    security:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Install dependencies
              run: npm ci

            - name: Run security audit
              run: npm audit --audit-level=moderate

    deploy:
        runs-on: ubuntu-latest
        needs: [test, security]
        if: github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18"

            - name: Install dependencies
              run: npm ci

            - name: Build application
              run: npm run build

            - name: Deploy to production
              run: echo "Deploy to production server"
              # Aqui vocÃª pode adicionar os comandos para deploy real
              # Por exemplo, deploy para Vercel, Heroku, AWS, etc.
